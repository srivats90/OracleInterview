{
	"info": {
		"_postman_id": "601ad02e-c44e-41dd-bfed-6d6b8f2d34e7",
		"name": "Tasker Application",
		"description": "Collection of APIs used for task management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27886299"
	},
	"item": [
		{
			"name": "Create task 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create task returns Created response\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Complete unit tests\",\n    \"taskDate\": \"2023-09-16\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/task",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"task"
					]
				},
				"description": "Create a new task"
			},
			"response": []
		},
		{
			"name": "Create task 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create task returns Created response\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Get milk\",\n    \"taskDate\": \"2023-09-16\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/task",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"task"
					]
				},
				"description": "Create a new task"
			},
			"response": []
		},
		{
			"name": "Get all tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Get all tasks returns 2 entities as expected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).eqls(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/task",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"task"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get task by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"GET task by ID code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"GET task by ID returns expected task na,e\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).equals(\"Complete unit tests\");",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/task/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"task",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update By ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Update test results\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Update test results\",\n    \"taskDate\": \"2023-09-16\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/task/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"task",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete by ID 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/task/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"task",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete by ID 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/task/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"task",
						"2"
					]
				}
			},
			"response": []
		}
	]
}